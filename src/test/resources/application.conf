akka {
  loglevel = "DEBUG"
  loggers = [akka.testkit.TestEventListener]

  actor {
    provider = cluster
    serializers {
      kryo = "com.twitter.chill.akka.AkkaSerializer"
    }
    serialization-bindings {
      "java.io.Serializable" = kryo
    }
    enable-additional-serialization-bindings = on
  }

  coordinated-shutdown.exit-jvm = on

  remote {
    log-remote-lifecycle-events = off
    artery {
      canonical {
        hostname = ${clustering.ip}
        port = ${clustering.port}
      }
    }
  }

  cluster {
    seed-nodes = [
    "akka://"${clustering.cluster.name}"@"${clustering.seed-ip}":"${clustering.seed-port}
    ]
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    auto-down-unreachable-after = 5s
    seed-node-timeout = 5s
    min-nr-of-members = 1
    number-of-shards = 1000
  }

}

clustering {
 ip = "127.0.0.1"
 ip = ${?CLUSTER_IP}
 port = 1600
 port = ${?CLUSTER_PORT}
 seed-ip = "127.0.0.1"
 seed-ip = ${?CLUSTER_IP}
 seed-ip = ${?SEED_PORT_1600_TCP_ADDR}
 seed-port = 1600
 seed-port = ${?SEED_PORT_1600_TCP_PORT}
 service-ip = "127.0.0.1"
 service-ip = ${?CLUSTER_IP}
 service-ip = ${?SERVICE_PORT_8080_TCP_ADDR}
 service-port = 8080
 service-port = ${?SERVICE_PORT_8080_HTTP_PORT}
 cluster.name = TK
}
